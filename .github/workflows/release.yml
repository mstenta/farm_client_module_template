on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*'

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set MODULE_NAME environment variable
        run: echo ::set-env name=MODULE_NAME::${PWD##*/}
      - uses: actions/setup-node@master
        with:
          node-version: '13.x'
      - run: npm install
      - run: npm run build
      - name: Create artifact
        run: |
          rm -r node_modules && cd .. && tar -czf ${{ env.MODULE_NAME }}.tar.gz ${{ env.MODULE_NAME }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            This release includes the following changes:
            - ...
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ../${{ env.MODULE_NAME }}.tar.gz
          asset_name: ${{ env.MODULE_NAME }}.tar.gz
          asset_content_type: application/zip


